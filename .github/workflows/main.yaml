name: Build and Deploy
on: [push, pull_request, workflow_dispatch]
jobs:
  build-and-deploy:
    runs-on: ubuntu-24.04
    steps:
      - name: Fetch ImageOS
        id: image-os
        run: echo "ImageOS=${ImageOS}" >> $GITHUB_OUTPUT

      - name: Checkout 🛎️
        uses: actions/checkout@v2.3.1

      - name: asdf setup
        uses: asdf-vm/actions/setup@v3
        with:
          asdf_branch: v0.15.0
      - name: asdf add plugins
        uses: asdf-vm/actions/plugins-add@v3
      - name: asdf cache
        uses: actions/cache@v4
        with:
          path: ~/.asdf/installs
          key: ${{ steps.image-os.outputs.ImageOs }}-${{ hashFiles('**/.tool-versions') }}
          restore-keys: |
            ${{ steps.image-os.outputs.ImageOs }}-asdf-
      - name: asdf install
        run: asdf install && asdf install erlang 26.2.5.9 && asdf reshim

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          # npm caches files in `~/.npm`
          path: ~/.npm
          key: ${{ steps.image-os.outputs.ImageOs }}-${{ hashFiles('package-lock.json') }}
      - name: Setup NPM
        run: sudo npm i -g npm && make setup_npm

      - name: Cache Ruby gems
        uses: actions/cache@v4
        with:
          # bundler caches files in `vendor`
          path: vendor/bundle
          key: ${{ steps.image-os.outputs.ImageOs }}-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ steps.image-os.outputs.ImageOs }}-gems-

      - name: Setup ruby gems
        run: |
          cat Gemfile.lock | tail -n 2 | grep -C2 "BUNDLED WITH" | tail -n 1 | xargs gem install bundler -v
          bundler config set --local deployment 'true'
          bundler install --jobs 4 --retry 3

      - name: Install rebar3
        run: sudo bash -c "curl https://s3.amazonaws.com/rebar3-nightly/rebar3 > /usr/local/bin/rebar3 && chmod +x /usr/local/bin/rebar3"

      - name: Fetch otp_versions.table
        run: make otp_versions.table

      - name: Install ubuntu packages
        run: |
          sudo apt update -y
          sudo apt install xsltproc yamllint -y

      - name: Configure Site 📈
        run: |
          if [ "${{ github.repository }}" != "erlang/erlang-org" ]; then
            URL="${{ github.repository_owner }}.github.io"
            REPOSITORY_NAME=$(echo ${{ github.repository }} | tr '/' ' ' | awk '{ print "/" $2 }')
            sed -i "s@url: \"https://www.erlang.org\"@url: \"https://${URL}\"@g" _config.yml
            sed -i "s@baseurl: \"\"@baseurl: \"$REPOSITORY_NAME\"@g" _config.yml
          fi

      - name: Setup site 💽
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEPLOY: true
        run: make -j4 setup

      - name: Test Site 🧪
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEPLOY: true
        run: make test
